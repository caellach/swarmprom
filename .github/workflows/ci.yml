name: Publish Docker images for new releases

on:
  release:
    types:
      - published

jobs:
  main:
    name: Push to Dockerhub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
         path: /tmp/.buildx-cache
         key: ${{ runner.os }}-buildx-${{ github.sha }}
         restore-keys: |
           ${{ runner.os }}-buildx-

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Assign release version from version.properties to Env variable
        run: |
          cat build/version.properties >> $GITHUB_ENV

      - name: Build and push Prometheus
        id:   docker_build_prometheus
        uses: docker/build-push-action@v3
        with:
          build-args: PROMETHEUS_VERSION=${{ env.PROMETHEUS_VERSION }}
          push: true
          context: prometheus
          tags: |
            mosonyi/swarmprom-prometheus:${{ env.PROMETHEUS_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push Node Exporter
        id:   docker_build_node-exporter
        uses: docker/build-push-action@v3
        with:
          build-args: NODE_EXPORTER_VERSION=${{ env.NODE_EXPORTER_VERSION }}
          push: true
          context: node-exporter
          tags: |
            mosonyi/swarmprom-node-exporter:${{ env.NODE_EXPORTER_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push Alertmanager
        id:   docker_build_alertmanager
        uses: docker/build-push-action@v3
        with:
          build-args: ALERTMANAGER_VERSION=${{ env.ALERTMANAGER_VERSION }}
          push: true
          context: alertmanager
          tags: |
            mosonyi/swarmprom-alertmanager:${{ env.ALERTMANAGER_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push Grafana
        id:   docker_build_grafana
        uses: docker/build-push-action@v3
        with:
          build-args: GRAFANA_VERSION=${{ env.GRAFANA_VERSION }}
          push: true
          context: grafana
          tags: |
            mosonyi/swarmprom-grafana:${{ env.GRAFANA_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: |
          echo ${{ steps.docker_build_prometheus.outputs.digest }}
          echo ${{ steps.docker_build_node-exporter.outputs.digest }}
          echo ${{ steps.docker_build_alertmanager.outputs.digest }}
          echo ${{ steps.docker_build_grafana.outputs.digest }}
